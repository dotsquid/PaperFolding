# For more info:
# https://editorconfig.org/
# https://github.com/MicrosoftDocs/visualstudio-docs/blob/master/docs/ide/editorconfig-code-style-settings-reference.md
# https://kent-boogaart.com/blog/editorconfig-reference-for-c-developers
# https://dotnetevolved.com/2018/01/visual-studio-and-editorconfig/

# Top-most EditorConfig file
root = true

# All files
[*]
indent_style = space

# JSON files
[*.json]
indent_size = 2

# C# files
[*.cs]
indent_size = 4
insert_final_newline = true
trim_trailing_whitespace = true
charset = utf-8-bom

###########################
# .NET Coding Conventions #
###########################

# Organize usings
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false

# "this" preferences
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:silent

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:warning
dotnet_style_readonly_field = false:none

# Expression-level preferences
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:warning
dotnet_style_null_propagation = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:silent
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_auto_properties = false:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:suggestion

#######################
# C# Code Style Rules #
#######################

# "var" and explicit types
csharp_style_var_for_built_in_types = true:silent
csharp_style_var_when_type_is_apparent = true:warning
csharp_style_var_elsewhere = false:silent

# Expression-bodied members
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = true:silent

# Pattern-matching preferences
csharp_style_pattern_matching_over_is_with_cast_check = true:silent
csharp_style_pattern_matching_over_as_with_null_check = true:silent

# "null" checking preferences
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion

# Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion

# Expression-level preferences
csharp_prefer_braces = true:silent
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion

#######################
# C# Formatting Rules #
#######################

# New line preferences
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_switch_labels = true
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_block_contents = true
csharp_indent_labels = flush_left

# Spacing preferences
csharp_space_before_comma = false
csharp_space_after_comma = true
csharp_space_before_dot = false
csharp_space_after_dot = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_before_open_square_brackets = false
csharp_space_between_empty_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_declaration_statements = do_not_ignore

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

######################
# Naming Conventions #
######################

# NOTE! 
# Naming conventions must be ordered from most-specific to least-specific.
# The first rule encountered that can be applied is the only rule that is applied.

# Use PascalCase with "k" prefix for constants
dotnet_naming_rule.constants_rule.severity                = none
dotnet_naming_rule.constants_rule.symbols                 = constants_symbol
dotnet_naming_rule.constants_rule.style                   = constants_style
dotnet_naming_symbols.constants_symbol.applicable_kinds   = field,local
dotnet_naming_symbols.constants_symbol.required_modifiers = const
dotnet_naming_style.constants_style.capitalization        = pascal_case
dotnet_naming_style.constants_style.required_prefix       = k

# Use PascalCase with "k" prefix for readonly fields
dotnet_naming_rule.readonly_fields_rule.severity         = none 
dotnet_naming_rule.readonly_fields_rule.symbols          = readonly_symbol 
dotnet_naming_rule.readonly_fields_rule.style            = readonly_style 
dotnet_naming_symbols.readonly_symbol.applicable_kinds   = field 
dotnet_naming_symbols.readonly_symbol.required_modifiers = readonly
dotnet_naming_style.readonly_style.capitalization        = pascal_case 
dotnet_naming_style.readonly_style.required_prefix       = k

# Use camelCase with "_" prefix for private and protected fields
dotnet_naming_rule.private_fields_must_be_underscored.severity         = warning
dotnet_naming_rule.private_fields_must_be_underscored.symbols          = private_fields_symbol 
dotnet_naming_rule.private_fields_must_be_underscored.style            = private_fields_style 
dotnet_naming_symbols.private_fields_symbol.applicable_kinds           = field 
dotnet_naming_symbols.private_fields_symbol.applicable_accessibilities = private,protected,protected_internal,protected_friend,private_protected
dotnet_naming_style.private_fields_style.capitalization                = camel_case 
dotnet_naming_style.private_fields_style.required_prefix               = _ 

# Use PascalCase with "I" prefix for interfaces
dotnet_naming_rule.interface_types_must_be_prefixed_with_I.severity = warning
dotnet_naming_rule.interface_types_must_be_prefixed_with_I.symbols  = interface_type_symbol
dotnet_naming_rule.interface_types_must_be_prefixed_with_I.style    = interface_type_style
dotnet_naming_symbols.interface_type_symbol.applicable_kinds        = interface
dotnet_naming_style.interface_type_style.capitalization             = pascal_case
dotnet_naming_style.interface_type_style.required_prefix            = I

# Use camelCase
dotnet_naming_rule.camel_case_rule.severity              = warning 
dotnet_naming_rule.camel_case_rule.symbols               = camel_case_symbol 
dotnet_naming_rule.camel_case_rule.style                 = camel_case_style 
dotnet_naming_symbols.camel_case_symbol.applicable_kinds = field,local,parameter,property,event
dotnet_naming_style.camel_case_style.capitalization      = camel_case 

# Use PascalCase
dotnet_naming_rule.pascal_case_rule.severity              = warning
dotnet_naming_rule.pascal_case_rule.symbols               = pascal_case_symbol
dotnet_naming_rule.pascal_case_rule.style                 = pascal_case_style
dotnet_naming_symbols.pascal_case_symbol.applicable_kinds = namespace,class,struct,enum,method,delegate,type_parameter,local_function
dotnet_naming_style.pascal_case_style.capitalization      = pascal_case
